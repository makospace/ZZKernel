1、运行命令请将终端切换至你编写的操作系统主目录下，如：/home/rlk/Desktop/myos/
2、只需要修改dd命令of参数为自己环境下hd60M.img路径即可
3、虽然第7章a小节才创建build目录，但是为了让命令尽可能修改少就直接可用，请现在就在创建build目录。终端需要已经切换至自己编写的操作系统主文件夹下
如/home/rlk/Desktop/myos/，也就是说build目录和boot目录是同级目录。创建build目录命令：mkdir build

编译并写入mbr
nasm -o build/mbr -I ./boot/include/ boot/mbr.S 
dd if=build/mbr of=/home/rlk/Desktop/bochs/hd60M.img bs=512 count=1 conv=notrunc

编译并写入loader
nasm -o build/loader -I ./boot/include/ ./boot/loader.S 
dd if=build/loader of=/home/rlk/Desktop/bochs/hd60M.img bs=512 count=4 conv=notrunc seek=2

编译mian
gcc-4.4 -I lib/kernel/ -I lib/ -I kernel/ -c -fno-builtin -o build/main.o -m32 kernel/main.c

编译pirnt
nasm -f elf -o build/print.o lib/kernel/print.S

编译kernel
nasm -f elf -o build/kernel.o kernel/kernel.S

编译interrupt
gcc-4.4 -I lib/kernel/ -I lib/ -I kernel/ -c -fno-builtin -o build/interrput.o -m32 kernel/interrupt.c

编译init
gcc-4.4 -m32 -I lib/kernel/ -I lib/ -I kernel/ -c -fno-builtin -o build/init.o kernel/init.c


链接成内核
ld -m elf_i386 -Ttext 0x00001500 -e main -o build/kernel.bin  build/main.o build/kernel.o build/init.o build/interrput.o build/print.o

写入内核
dd if=build/kernel.bin of=/home/rlk/Desktop/bochs/hd60M.img bs=512 count=200 seek=9 conv=notrunc

清除build文件夹内所有的编译好的二进制文件
rm -rf build/*









